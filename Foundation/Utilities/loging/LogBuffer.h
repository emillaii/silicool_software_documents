//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : LogBuffer.h
//  @ Date : 2020/1/7
//  @ Author :
//
//

#if !defined(LOGBUFFER_H)
#define LOGBUFFER_H

#include <QMutex>
#include <QMutexLocker>
#include <QObject>

class LogItem
{
public:
    QString color;
    QString log;
};

Q_DECLARE_METATYPE(QList<LogItem *>)

class LogBuffer : public QObject
{
    Q_OBJECT

public:
    void appendLog(LogItem *logItem)
    {
        QMutexLocker tmpLocker(&locker);
        logs.append(logItem);
    }

public slots:
    void onDetectBuffer()
    {
        QMutexLocker tmpLocker(&locker);
        if (logs.count() > 0)
        {
            emit logBufferChanged(logs);
            logs.clear();
        }
    }

signals:
    void logBufferChanged(QList<LogItem *> logs);

private:
    QMutex locker;
    QList<LogItem *> logs;
};

#endif    // LOGBUFFER_H
