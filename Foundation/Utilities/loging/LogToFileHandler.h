//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : LogServer.h
//  @ Date : 2020/1/7
//  @ Author :
//
//

#if !defined(LOGSERVER_H)
#define LOGSERVER_H

#include "../utilities_global.h"
#include "LogCollector.h"
#include "logcollectorconfig.h"
#include "rollbackfile.h"

class UTILITIESSHARED_EXPORT LogToFileHandler : public LogCollector
{
public:
    LogToFileHandler(bool outputToConsole);

    void init();

    ~LogToFileHandler() override;

    // LogCollector interface
protected:
    virtual void onUnCategorizedLog(int logLevel, QString &msg) override;

    virtual void onCategorizedLog(QString &category, int logLevel, QString &msg) override;

private:
    void addRollbackFile(QString category, QString fileName)
    {
        rollbackFiles[category] = new RollbackFile();
        rollbackFiles[category]->init(config->logDir(), fileName, 1024 * 1024 * 3, 100, true);
    }

private:
    bool outputToConsole;
    ConsoleOutputer consoleOutputer;
    const QString warningCategory = "warningCategory";
    const QString warningLogName = "warning";
    LogCollectorConfig *config = nullptr;
    ConfigFile *configFile = nullptr;
    QMap<QString, RollbackFile *> rollbackFiles;
};

#endif    // LOGSERVER_H
